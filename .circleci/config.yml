# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: kevinbuntrock/maven-toolchain-jdk-8-11-17:latest
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Clean install
          command: |
            cd openapi-maven-plugin
            echo $JAVA_HOME
            mvn --version
            mvn clean install
        
      - run:
          name: Prepare integration tests
          command: |
            cp -r ~/.m2/repository/* integration-tests/src/test/resources-its/com/github/kbuntrock/it/BasicIT/.predefined-repo
            
      - run:
          name: Integration tests JDK8
          command: |
            export JAVA_HOME=$JAVA8_HOME
            mvn --version
            cd integration-tests
            mvn -Dit.test=BasicIT#nominal_test_case_jdk8 clean verify
            
      - run:
          name: Integration tests JDK11
          command: |
            export JAVA_HOME=$JAVA11_HOME
            mvn --version
            cd integration-tests
            mvn -Dit.test=BasicIT#nominal_test_case_jdk11 clean verify
            
      - run:
          name: Integration tests JDK17
          command: |
            export JAVA_HOME=$JAVA17_HOME
            mvn --version
            cd integration-tests
            mvn -Dit.test=BasicIT#nominal_test_case_jdk17 clean verify
      
      # Uncomment to check execution result of integration tests
      #- store_artifacts:
      #    path: integration-tests/target/maven-it/com/github/kbuntrock/it/BasicIT/nominal_test_case_jdk8/mvn-stdout.log
      #    destination: log-jdk8.txt


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-test: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
